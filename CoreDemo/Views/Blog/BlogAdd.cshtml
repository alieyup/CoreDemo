@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}
@using(Html.BeginForm("BlogAdd","Blog", FormMethod.Post))
{
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Yeni Blog Ekleme</h4>
    @Html.Label("Blog Başlığı")
    @*<label asp-for="BlogTitle">@Html.DisplayNameFor(x=>x.BlogTitle)</label>*@
    @Html.TextBoxFor(x=>x.BlogTitle, new {@class="form-control"})
    <input asp-for="BlogTitle" class="form-control"/>
    <span asp-validation-for="BlogTitle" class="text-danger"></span>

    @Html.ValidationMessageFor(x=>x.BlogTitle)
    <br />
    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(x=>x.BlogThumbnailImage, new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogThumbnailImage)
    <br />
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x=>x.BlogImage, new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogImage)
    <br />
    @Html.Label("Blog Kategori")
    @Html.DropDownListFor(x=>x.CategoryID,(List<SelectListItem>)ViewBag.cv,new {@class ="form-control"})
    <br />
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x=>x.BlogContent, 15,3, new {@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogContent)
    <br />
    <button type="submit" class="btn btn-gradient-success btn-icon-text"><i class="mdi mdi-file-plus btn-icon-prepend"></i>Yazıyı Ekle</button>
    </div></div></div>
}
